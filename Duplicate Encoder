/*Duplicate Encoder*/
*************************************************************************************************************************************
The goal of this exercise is to convert a string to a new string where each character in the new string is "(" if 
that character appears only once in the original string, or ")" if that character appears more than once in the original string.
Ignore capitalization when determining if a character is a duplicate.

Examples
"din"      =>  "((("
"recede"   =>  "()()()"
"Success"  =>  ")())())"
"(( @"     =>  "))((" 
*************************************************************************************************************************************
public class DuplicateEncoder {
	static String encode(String word){
    word = word.toLowerCase();
    String[] newString = word.split(""); // ["w", "o"]

    String newChar = "";
    int count = 0;

    for(int i = 0; i < newString.length; i++){
      count = 0;
      System.out.println("count before "+ count);

      for(int j = 0; j < newString.length; j++){
        if(newString[i].equals(newString[j])){
          count ++;
        }
      }
      System.out.println("count after "+count);
      if(count == 1){
        newChar += "(";
      }else{
        newChar += ")";
      }
    }
    return newChar;
  }
}
*************************************************************************************************************************************
Another Solution
************************************************************************************************************************************
static String encode(String word){
    word = word.toLowerCase();
    String result = "";
    for (int i = 0; i < word.length(); ++i) {
      char c = word.charAt(i);
      result += word.lastIndexOf(c) == word.indexOf(c) ? "(" : ")";
    }
    return result;
  }
  *************************************************************************************************************************************

public class DuplicateEncoder 
{
  static String encode(String word)
  {
  word = word.toLowerCase();
  String result = "";
  for (int i = 0; i < word.length(); i++)
  {
    if (word.indexOf(word.charAt(i)) == word.lastIndexOf(word.charAt(i)))
      result += "(";
    else result += ")";  
    
  }
    return result;
  }
}
