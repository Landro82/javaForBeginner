/*Sum of Digits / Digital Root*/
*************************************************************************************************************************************
In this kata, you must create a digital root function.

A digital root is the recursive sum of all the digits in a number. Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. This is only applicable to the natural numbers.

Here's how it works:

digital_root(16)
=> 1 + 6
=> 7

digital_root(942)
=> 9 + 4 + 2
=> 15 ...
=> 1 + 5
=> 6

digital_root(132189)
=> 1 + 3 + 2 + 1 + 8 + 9
=> 24 ...
=> 2 + 4
=> 6
************************************************************************************************************************************
public class DRoot {
  public static int digital_root(int n) {
    int result = 10;
	  int logo = 0;
		String str = Integer.toString(n);
		
    String [] words = str.split("");
        
        while(result > 9){
            if(logo !=  0){
            	str = Integer.toString(result);
                words = str.split("");
            }
            logo = 1;
            result = 0;
            for (String w : words){
                //logo = w;
                result += Integer.parseInt(w);
            }
        }
     return result;
  }
